name: Release Launcher

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  package-windows:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GH_PAT }}
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build installer
        run: pnpm package -- --win

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shindo-launcher-windows
          path: |
            release/**/*.exe
            release/**/*.zip
          if-no-files-found: error

      - name: Publish GitHub release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/**/*.exe
            release/**/*.zip
          generate_release_notes: true
          draft: false
          prerelease: false
          allow_updates: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  package-macos:
    runs-on: macos-latest
    env:
      GH_TOKEN: ${{ secrets.GH_PAT }}
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dmg
        run: pnpm package -- --mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shindo-launcher-macos
          path: |
            release/**/*.dmg
            release/**/*.zip
          if-no-files-found: error

      - name: Publish GitHub release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/**/*.dmg
            release/**/*.zip
          generate_release_notes: true
          draft: false
          prerelease: false
          allow_updates: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  package-linux:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_PAT }}
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build AppImage and deb
        run: pnpm package -- --linux

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shindo-launcher-linux
          path: |
            release/**/*.AppImage
            release/**/*.deb
          if-no-files-found: error

      - name: Publish GitHub release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/**/*.AppImage
            release/**/*.deb
          generate_release_notes: true
          draft: false
          prerelease: false
          allow_updates: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
